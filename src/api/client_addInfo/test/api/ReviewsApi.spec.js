/*
 * Additional Info Management API
 * API for managing views, reviews, continue-watching functionality, and other additional operations for content on a streaming platform.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdditionalInfoManagementApi);
  }
}(this, function(expect, AdditionalInfoManagementApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdditionalInfoManagementApi.ReviewsApi();
  });

  describe('(package)', function() {
    describe('ReviewsApi', function() {
      describe('addNumericReviewForContent', function() {
        it('should call addNumericReviewForContent successfully', function(done) {
          // TODO: uncomment, update parameter values for addNumericReviewForContent call and complete the assertions
          /*

          instance.addNumericReviewForContent(body, contentId, userId, profileId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(AdditionalInfoManagementApi.SuccessResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteNumericReviewForContent', function() {
        it('should call deleteNumericReviewForContent successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteNumericReviewForContent call and complete the assertions
          /*

          instance.deleteNumericReviewForContent(contentId, userId, profileId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(AdditionalInfoManagementApi.SuccessResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getNumericReviewForContentByUserAndProfile', function() {
        it('should call getNumericReviewForContentByUserAndProfile successfully', function(done) {
          // TODO: uncomment, update parameter values for getNumericReviewForContentByUserAndProfile call and complete the assertions
          /*

          instance.getNumericReviewForContentByUserAndProfile(contentId, userId, profileId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(AdditionalInfoManagementApi.ReviewResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getNumericReviewsByUser', function() {
        it('should call getNumericReviewsByUser successfully', function(done) {
          // TODO: uncomment, update parameter values for getNumericReviewsByUser call and complete the assertions
          /*

          instance.getNumericReviewsByUser(userId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(AdditionalInfoManagementApi.ReviewsResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getNumericReviewsForContent', function() {
        it('should call getNumericReviewsForContent successfully', function(done) {
          // TODO: uncomment, update parameter values for getNumericReviewsForContent call and complete the assertions
          /*

          instance.getNumericReviewsForContent(contentId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(AdditionalInfoManagementApi.ReviewsResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateNumericReviewForContentByUserAndProfile', function() {
        it('should call updateNumericReviewForContentByUserAndProfile successfully', function(done) {
          // TODO: uncomment, update parameter values for updateNumericReviewForContentByUserAndProfile call and complete the assertions
          /*

          instance.updateNumericReviewForContentByUserAndProfile(body, contentId, userId, profileId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(AdditionalInfoManagementApi.SuccessResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
