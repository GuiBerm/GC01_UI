/*
 * Additional Info Management API
 * API for managing views, reviews, continue-watching functionality, and other additional operations for content on a streaming platform.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from './ApiClient';
import ContinuewatchingContentIdBody from './model/ContinuewatchingContentIdBody';
import ContinuewatchingContentIdBody1 from './model/ContinuewatchingContentIdBody1';
import InlineResponse200 from './model/InlineResponse200';
import InlineResponse2001 from './model/InlineResponse2001';
import InlineResponse2002 from './model/InlineResponse2002';
import InlineResponse2002Recommendations from './model/InlineResponse2002Recommendations';
import ReviewRequest from './model/ReviewRequest';
import ReviewResponse from './model/ReviewResponse';
import ReviewsResponse from './model/ReviewsResponse';
import ReviewsResponseReviews from './model/ReviewsResponseReviews';
import SuccessResponse from './model/SuccessResponse';
import UpdateReviewRequest from './model/UpdateReviewRequest';
import UpdateViewRequest from './model/UpdateViewRequest';
import ViewRequest from './model/ViewRequest';
import ViewResponse from './model/ViewResponse';
import ContinueWatchingApi from './api/ContinueWatchingApi';
import MiscApi from './api/MiscApi';
import ReviewsApi from './api/ReviewsApi';
import ViewsApi from './api/ViewsApi';

/**
* API_for_managing_views_reviews_continue_watching_functionality_and_other_additional_operations_for_content_on_a_streaming_platform_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AdditionalInfoManagementApi = require('index'); // See note below*.
* var xxxSvc = new AdditionalInfoManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AdditionalInfoManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AdditionalInfoManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AdditionalInfoManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ContinuewatchingContentIdBody model constructor.
     * @property {module:model/ContinuewatchingContentIdBody}
     */
    ContinuewatchingContentIdBody,

    /**
     * The ContinuewatchingContentIdBody1 model constructor.
     * @property {module:model/ContinuewatchingContentIdBody1}
     */
    ContinuewatchingContentIdBody1,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The InlineResponse2002Recommendations model constructor.
     * @property {module:model/InlineResponse2002Recommendations}
     */
    InlineResponse2002Recommendations,

    /**
     * The ReviewRequest model constructor.
     * @property {module:model/ReviewRequest}
     */
    ReviewRequest,

    /**
     * The ReviewResponse model constructor.
     * @property {module:model/ReviewResponse}
     */
    ReviewResponse,

    /**
     * The ReviewsResponse model constructor.
     * @property {module:model/ReviewsResponse}
     */
    ReviewsResponse,

    /**
     * The ReviewsResponseReviews model constructor.
     * @property {module:model/ReviewsResponseReviews}
     */
    ReviewsResponseReviews,

    /**
     * The SuccessResponse model constructor.
     * @property {module:model/SuccessResponse}
     */
    SuccessResponse,

    /**
     * The UpdateReviewRequest model constructor.
     * @property {module:model/UpdateReviewRequest}
     */
    UpdateReviewRequest,

    /**
     * The UpdateViewRequest model constructor.
     * @property {module:model/UpdateViewRequest}
     */
    UpdateViewRequest,

    /**
     * The ViewRequest model constructor.
     * @property {module:model/ViewRequest}
     */
    ViewRequest,

    /**
     * The ViewResponse model constructor.
     * @property {module:model/ViewResponse}
     */
    ViewResponse,

    /**
    * The ContinueWatchingApi service constructor.
    * @property {module:api/ContinueWatchingApi}
    */
    ContinueWatchingApi,

    /**
    * The MiscApi service constructor.
    * @property {module:api/MiscApi}
    */
    MiscApi,

    /**
    * The ReviewsApi service constructor.
    * @property {module:api/ReviewsApi}
    */
    ReviewsApi,

    /**
    * The ViewsApi service constructor.
    * @property {module:api/ViewsApi}
    */
    ViewsApi
};
