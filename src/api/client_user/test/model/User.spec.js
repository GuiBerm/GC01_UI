/*
 * User and Profile Management API
 * API for managing users, profiles, and individual content lists.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UserAndProfileManagementApi);
  }
}(this, function(expect, UserAndProfileManagementApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('User', function() {
      beforeEach(function() {
        instance = new UserAndProfileManagementApi.User();
      });

      it('should create an instance of User', function() {
        // TODO: update the code to test User
        expect(instance).to.be.a(UserAndProfileManagementApi.User);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property username (base name: "username")', function() {
        // TODO: update the code to test the property username
        expect(instance).to.have.property('username');
        // expect(instance.username).to.be(expectedValueLiteral);
      });

      it('should have the property email (base name: "email")', function() {
        // TODO: update the code to test the property email
        expect(instance).to.have.property('email');
        // expect(instance.email).to.be(expectedValueLiteral);
      });

      it('should have the property contrasena (base name: "contrasena")', function() {
        // TODO: update the code to test the property contrasena
        expect(instance).to.have.property('contrasena');
        // expect(instance.contrasena).to.be(expectedValueLiteral);
      });

      it('should have the property rol (base name: "rol")', function() {
        // TODO: update the code to test the property rol
        expect(instance).to.have.property('rol');
        // expect(instance.rol).to.be(expectedValueLiteral);
      });

    });
  });

}));
