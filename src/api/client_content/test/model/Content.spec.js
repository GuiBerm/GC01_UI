/*
 * Movie Streaming API
 * API for managing content (movies, series, and episodes) on a streaming platform.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MovieStreamingApi);
  }
}(this, function(expect, MovieStreamingApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Content', function() {
      beforeEach(function() {
        instance = new MovieStreamingApi.Content();
      });

      it('should create an instance of Content', function() {
        // TODO: update the code to test Content
        expect(instance).to.be.a(MovieStreamingApi.Content);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property type (base name: "type")', function() {
        // TODO: update the code to test the property type
        expect(instance).to.have.property('type');
        // expect(instance.type).to.be(expectedValueLiteral);
      });

      it('should have the property title (base name: "title")', function() {
        // TODO: update the code to test the property title
        expect(instance).to.have.property('title');
        // expect(instance.title).to.be(expectedValueLiteral);
      });

      it('should have the property synopsis (base name: "synopsis")', function() {
        // TODO: update the code to test the property synopsis
        expect(instance).to.have.property('synopsis');
        // expect(instance.synopsis).to.be(expectedValueLiteral);
      });

      it('should have the property parentSeriesId (base name: "parentSeriesId")', function() {
        // TODO: update the code to test the property parentSeriesId
        expect(instance).to.have.property('parentSeriesId');
        // expect(instance.parentSeriesId).to.be(expectedValueLiteral);
      });

      it('should have the property releaseYear (base name: "releaseYear")', function() {
        // TODO: update the code to test the property releaseYear
        expect(instance).to.have.property('releaseYear');
        // expect(instance.releaseYear).to.be(expectedValueLiteral);
      });

      it('should have the property duration (base name: "duration")', function() {
        // TODO: update the code to test the property duration
        expect(instance).to.have.property('duration');
        // expect(instance.duration).to.be(expectedValueLiteral);
      });

      it('should have the property coverImage (base name: "coverImage")', function() {
        // TODO: update the code to test the property coverImage
        expect(instance).to.have.property('coverImage');
        // expect(instance.coverImage).to.be(expectedValueLiteral);
      });

      it('should have the property genre (base name: "genre")', function() {
        // TODO: update the code to test the property genre
        expect(instance).to.have.property('genre');
        // expect(instance.genre).to.be(expectedValueLiteral);
      });

      it('should have the property actorIds (base name: "actorIds")', function() {
        // TODO: update the code to test the property actorIds
        expect(instance).to.have.property('actorIds');
        // expect(instance.actorIds).to.be(expectedValueLiteral);
      });

      it('should have the property directorIds (base name: "directorIds")', function() {
        // TODO: update the code to test the property directorIds
        expect(instance).to.have.property('directorIds');
        // expect(instance.directorIds).to.be(expectedValueLiteral);
      });

      it('should have the property language (base name: "language")', function() {
        // TODO: update the code to test the property language
        expect(instance).to.have.property('language');
        // expect(instance.language).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

    });
  });

}));
